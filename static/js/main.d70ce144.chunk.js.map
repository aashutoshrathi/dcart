{"version":3,"sources":["assets/logo.png","utils/getWeb3.js","components/Store.js","components/StoreItems.js","components/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","this","Content","Layout","Store","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","value","target","state","loading","bind","assertThisInitialized","handleSubmit","fetchStores","prevProps","contract","accounts","name","methods","addStore","send","from","stores","getStoreCount","then","num","_loop","i","_this2","getStore","res","storeID","owner","quant","catch","error","finally","react_default","createElement","style","padding","marginTop","background","minHeight","es_form","layout","Item","label","labelCol","span","wrapperCol","input","onChange","offset","es_button","type","htmlType","onClick","disabled","length","list","size","grid","gutter","column","header","dataSource","renderItem","store","Link","to","concat","card","title","Component","InputGroup","Input","Group","StoreItems","showModal","visible","handleCancel","addItem","_ref","_this$props","_this$state","price","quantity","fetchItems","_x","apply","arguments","defineProperty","buyItem","_ref2","_callee2","itemIndex","_context2","buying","_x2","_x3","getStoreBalance","balance","bal","storeBalance","withdrawBalance","curBalance","withdrawStoreBalance","items","finalItems","getStoreItemCount","fetchItem","index","push","storeName","isOwner","_this3","_this4","StoreItems_Content","row","col","xs","sm","md","lg","xl","className","ghost","modal","onOk","onCancel","placeholder","item","Orders","fetchOrders","itemCount","count","j","fin","itemName","abrupt","sent","getOrderDetails","key","total","columns","dataIndex","Orders_Content","table","Header","Footer","headerStyles","position","zIndex","width","App","connected","currentBalance","componentDidMount","networkId","deployedNetwork","instance","eth","getAccounts","net","getId","MarketContract","networks","Contract","abi","address","fetchUserBalance","alert","getBalance","wei","obj","Math","round","fetchBalance","menu","theme","mode","lineHeight","href","src","Logo","alt","badge","status","BrowserRouter","Switch","Route","exact","path","render","components_Store","assign","updated","match","components_StoreItems","params","components_Orders","textAlign","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d70ce144.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f4eb5b11.png\";","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      // admin.startRPC(\"127.0.0.1\", 8545, \"*\", \"web3,db,net,eth\") from geth console\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\" // Ganache Default\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport { Button, Layout, Form, Input, List, Card } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Link } from \"react-router-dom\";\nconst { Content } = Layout;\n\nclass Store extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: false, value: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchStores();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.contract) {\n      this.fetchStores();\n    }\n  }\n  async handleSubmit(event) {\n    this.setState({ loading: true });\n    const { accounts, contract } = this.props;\n    var name = this.state.value;\n    // console.log(name);\n    await contract.methods\n      .addStore(name, accounts[0], 0)\n      .send({ from: accounts[0] });\n    this.setState({ loading: false, value: \"\" });\n    this.fetchStores();\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  async fetchStores() {\n    if (!this.props.contract) {\n      return;\n    }\n    let stores = [];\n    this.props.contract.methods\n      .getStoreCount()\n      .call()\n      .then(num => {\n        for (let i = num - 1; i >= 0; i--) {\n          this.props.contract.methods\n            .getStore(i)\n            .call()\n            .then(res => {\n              stores[i] = {\n                storeID: i,\n                name: res[0],\n                owner: res[1],\n                quant: res[2]\n              };\n              // console.log(res);\n            })\n            .catch(console.error)\n            .finally(() => {\n              this.setState({ stores: stores });\n            });\n        }\n      })\n      .catch(console.error);\n  }\n\n  render() {\n    return (\n      <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\n        <br />\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 380 }}>\n          <div>\n            <h3>Add Store</h3>\n          </div>\n          <Form layout=\"inline\">\n            <Form.Item\n              label=\"Store Name\"\n              labelCol={{ span: 7 }}\n              wrapperCol={{ span: 14 }}\n            >\n              <Input value={this.state.value} onChange={this.handleChange} />\n            </Form.Item>\n            <Form.Item wrapperCol={{ span: 10, offset: 5 }}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                onClick={this.handleSubmit}\n                disabled={!this.state.value || this.state.value.length > 20}\n                loading={this.state.loading}\n              >\n                Add New Store\n              </Button>\n            </Form.Item>\n          </Form>\n          <br />\n          <hr />\n\n          <List\n            size=\"default\"\n            grid={{ gutter: 16, column: 3 }}\n            header={\n              <div>\n                <h3>\n                  <b>Stores</b>\n                </h3>\n              </div>\n            }\n            dataSource={this.state.stores}\n            renderItem={store => (\n              <List.Item>\n                <Link to={`/stores/${store.storeID}`}>\n                  <Card title={store.name}><b>Items Available: </b> {store.quant}</Card>\n                </Link>\n              </List.Item>\n            )}\n          />\n        </div>\n      </Content>\n    );\n  }\n}\n\nexport default Store;\n","// List all items of store\n// Add Item button for owner and buy for everyone else.\nimport React, { Component } from \"react\";\nimport { Row, Col, Layout, List, Card, Modal, Button, Input } from \"antd\";\nimport \"antd/dist/antd.css\";\nconst { Content } = Layout;\nconst InputGroup = Input.Group;\n\nclass StoreItems extends Component {\n  constructor(props) {\n    super(props);\n    // console.log(props);\n    this.state = {\n      loading: false,\n      name: \"\",\n      price: \"\",\n      quantity: \"\",\n      visible: false,\n      buying: false,\n      storeName: \"\",\n      isOwner: false,\n      items: [],\n      storeBalance: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  addItem = async (event) => {\n    this.setState({loading: true, visible: false});\n    const { accounts, contract, storeID } = this.props;\n    const { name, price, quantity } = this.state;\n    await contract.methods\n      .addItem(name, price, quantity, storeID)\n      .send({ from: accounts[0] });\n    this.setState({ loading: false, value: \"\"});\n    this.fetchItems();\n  };\n\n  componentDidMount() {\n    if (!this.props.contract) {\n      // console.log(\"No contract found\");\n      return;\n    }\n    // console.log(this.props);\n    this.props.contract.methods\n      .getStore(this.props.storeID)\n      .call()\n      .then(res => {\n        // console.log(res);\n        this.setState({\n          storeName: res[0],\n          isOwner: res[1] === this.props.accounts[0]\n        });\n      });\n    this.fetchItems();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.contract) {\n      this.fetchItems();\n      this.props.contract.methods\n        .getStore(this.props.storeID)\n        .call()\n        .then(res => {\n          // console.log(res);\n          this.setState(\n            {\n              storeName: res[0],\n              isOwner: res[1] === this.props.accounts[0]\n            },\n            this.props.accounts[0] === res[1]\n              ? this.getStoreBalance()\n              : console.log(\"Not owner\")\n          );\n        });\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    // console.log(this.state);\n  };\n\n  buyItem = async (itemIndex, price) => {\n    // console.log(itemIndex, this.props.storeID);\n    this.setState({buying:true});\n    await this.props.contract.methods\n      .buyItem(itemIndex, 1, this.props.storeID)\n      .send({ from: this.props.accounts[0], value: price });\n    this.setState({buying:false});\n    this.fetchItems();\n  };\n\n  getStoreBalance = () => {\n    let balance = 0;\n    this.props.contract.methods\n      .getStoreBalance(this.props.storeID)\n      .call()\n      .then(bal => {\n        // console.log(this.props.storeID);\n        balance = bal;\n      })\n      .then(() => {\n        this.setState({ storeBalance: balance });\n      });\n  };\n\n  withdrawBalance = () => {\n    var curBalance = this.state.storeBalance;\n    console.log(curBalance);\n    this.props.contract.methods\n      .withdrawStoreBalance(this.props.storeID, curBalance)\n      .send({ from: this.props.accounts[0] });\n    this.getStoreBalance();\n  };\n\n  fetchItems = () => {\n    if (!this.props.contract) {\n      return;\n    }\n    var storeID = this.props.storeID;\n    let items = [];\n    let finalItems = [];\n    this.props.contract.methods\n      .getStoreItemCount(storeID)\n      .call()\n      .then(num => {\n        for (let i = num - 1; i >= 0; i--) {\n          this.props.contract.methods\n            .fetchItem(i, storeID)\n            .call()\n            .then(res => {\n              // console.log(res)\n              items[i] = {\n                index: i,\n                name: res[0],\n                quantity: res[1],\n                price: res[2]\n              };\n            })\n            .catch(console.error)\n            .finally(() => {\n              finalItems.push(items[i]);\n            });\n        }\n        this.setState({ items: finalItems });\n      })\n      .catch(console.error);\n  };\n\n  render() {\n    return (\n      <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\n        <br />\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 380 }}>\n          <List\n            size=\"default\"\n            grid={{ gutter: 14, column: 3 }}\n            header={\n              <div>\n                <Row gutter={3}>\n                  <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n                    <h3>\n                      <b>{this.state.storeName}</b>\n                    </h3>\n                  </Col>\n\n                  {this.state.isOwner ? (\n                    <div className=\"addItem\">\n                      <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n                        <p>\n                          <b>Store Balance: </b>\n                          {this.state.storeBalance} wei\n                        </p>\n                      </Col>\n                      <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n                        <Button\n                          type=\"primary\"\n                          htmlType=\"submit\"\n                          onClick={this.showModal}\n                          loading={this.state.loading}\n                        >\n                          Add Item\n                        </Button>\n                      </Col>\n                      <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n                        <Button\n                          type=\"danger\"\n                          ghost\n                          htmlType=\"submit\"\n                          onClick={() => this.withdrawBalance()}\n                        >\n                          Withdraw Balance\n                        </Button>\n                      </Col>\n                      <Modal\n                        title={\"Add Item to \" + this.state.storeName}\n                        visible={this.state.visible}\n                        onOk={this.addItem}\n                        onCancel={this.handleCancel}\n                      >\n                        <InputGroup>\n                          <Input\n                            name=\"name\"\n                            onChange={this.handleChange}\n                            placeholder=\"Item Name\"\n                          />\n                          <br />\n                          <Input\n                            name=\"price\"\n                            onChange={this.handleChange}\n                            placeholder=\"Item Price\"\n                          />\n                          <br />\n                          <Input\n                            name=\"quantity\"\n                            onChange={this.handleChange}\n                            placeholder=\"Item Quantity\"\n                          />\n                        </InputGroup>\n                      </Modal>\n                    </div>\n                  ) : (\n                    <div />\n                  )}\n                </Row>\n              </div>\n            }\n            dataSource={this.state.items}\n            renderItem={item => (\n              <List.Item>\n                <Card title={item.name}>\n                  <b>Price:</b> {item.price} wei\n                  <br />\n                  <b>Quantity:</b> {item.quantity} sku\n                  <br />\n                  {this.state.isOwner ? (\n                    <span />\n                  ) : (\n                    <Button\n                      onClick={() => this.buyItem(item.index, item.price)}\n                      type=\"primary\"\n                      disabled={item.quantity === \"0\" || item.quantity === 0}\n                      loading={this.state.buying}\n                    >\n                      {this.state.buying?\"Buying\":\"Buy\"}\n                    </Button>\n                  )}\n                </Card>\n              </List.Item>\n            )}\n          />\n        </div>\n      </Content>\n    );\n  }\n}\n\nexport default StoreItems;\n","// List all items of store\n// Add Item button for owner and buy for everyone else.\nimport React, { Component } from \"react\";\nimport { Layout, Table } from \"antd\";\nimport \"antd/dist/antd.css\";\nconst { Content } = Layout;\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    // console.log(props);\n    this.state = {\n      loading: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.contract) {\n      // console.log(\"No contract found\");\n      return;\n    }\n    this.fetchOrders();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.contract) {\n      this.fetchOrders();\n    }\n  }\n\n  fetchOrders = async () => {\n    if (!this.props.contract) {\n      return;\n    }\n    let items = [];\n    let num = await this.props.contract.methods.getStoreCount().call();\n    // console.log(\"No. of stores:\", num);\n    let itemCount = [];\n    let count = 0;\n    for (let i = num - 1; i >= 0; i--) {\n      var storeName = await this.props.contract.methods.getStore(i).call();\n      storeName = storeName[0];\n      // console.log(storeName);\n      itemCount[i] = await this.props.contract.methods\n        .getStoreItemCount(i)\n        .call();\n      for (let j = itemCount[i] - 1; j >= 0; j--) {\n        let fin = await this.props.contract.methods\n          .getOrderDetails(i, j)\n          .call();\n        let itemName = await this.props.contract.methods.fetchItem(j, i).call();\n        // console.log(itemName);\n        if ((fin[0] === 0 || fin[0] === \"0\")) {\n          items[count] = {\n            key: count,\n            name: itemName[0],\n            quantity: fin[0],\n            price: fin[1] + \" wei\",\n            total: fin[1] * fin[0] + \" wei\",\n            store: storeName\n          };\n        }\n        count++;\n      }\n    }\n    // console.log(items);\n    this.setState({ items: items });\n  };\n\n  columns = [\n    {\n      title: \"Item Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"Store Name\",\n      dataIndex: \"store\",\n      key: \"store\"\n    },\n    {\n      title: \"Quantity\",\n      dataIndex: \"quantity\",\n      key: \"quantity\"\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\"\n    },\n    {\n      title: \"Total\",\n      dataIndex: \"total\",\n      key: \"total\"\n    }\n  ];\n\n  render() {\n    return (\n      <Content style={{ padding: \"0 50px\", marginTop: 64 }}>\n        <br />\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 380 }}>\n          <Table columns={this.columns} dataSource={this.state.items} />\n        </div>\n      </Content>\n    );\n  }\n}\n\nexport default Orders;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MarketContract from \"./contracts/Market.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport { Badge, Layout, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport Store from \"./components/Store\";\nimport Logo from \"./assets/logo.png\";\nimport StoreItems from \"./components/StoreItems.js\";\nimport Orders from \"./components/Orders.js\";\n\nconst { Header, Footer } = Layout;\n\nvar headerStyles = { position: \"fixed\", zIndex: 1, width: \"100%\" };\nclass App extends Component {\n  state = {\n    connected: false,\n    web3: null,\n    accounts: null,\n    contract: null,\n    loading: false,\n    currentBalance: null\n  };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      // console.log(web3);\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = MarketContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        MarketContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance, connected: true });\n      this.fetchUserBalance();\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n  fetchBalance(address, key) {\n    this.state.web3.eth.getBalance(address).then(wei => {\n      let obj = {};\n      obj[key] = Math.round((wei / 1e18) * 100) / 100;\n      this.setState(obj);\n    });\n  }\n\n  fetchUserBalance() {\n    this.fetchBalance(this.state.accounts[0], \"currentBalance\");\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Header style={headerStyles}>\n          <Menu theme=\"dark\" mode=\"horizontal\" style={{ lineHeight: \"64px\" }}>\n            <Menu.Item key=\"0\">\n              <div>\n                <a href=\"/\">\n                  <img src={Logo} alt=\"D-Cart\" className=\"logo\" />\n                </a>\n              </div>\n            </Menu.Item>\n            <Menu.Item key=\"7\">\n              {this.state.connected ? (\n                <div className=\"status\">\n                  <a href=\"/orders\">\n                    <b>Your Orders</b>\n                  </a>\n                </div>\n              ) : (\n                <div />\n              )}\n            </Menu.Item>\n            <Menu.Item key=\"6\">\n              {this.state.connected ? (\n                <div className=\"status\">\n                  <a href=\"/stores\">\n                    <b>Stores</b>\n                  </a>\n                </div>\n              ) : (\n                <div />\n              )}\n            </Menu.Item>\n            <Menu.Item key=\"1\">\n              {this.state.connected ? (\n                <div className=\"status\">\n                  <b>Account:</b> {this.state.accounts[0]}\n                </div>\n              ) : (\n                <div />\n              )}\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              {this.state.connected ? (\n                <div onClick={this.fetchUserBalance()} className=\"status\">\n                  <span>\n                    <b>Balance:</b> {this.state.currentBalance} ETH\n                  </span>\n                </div>\n              ) : (\n                <div />\n              )}\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              {this.state.connected ? (\n                <div className=\"status\">\n                  Connected <Badge status=\"success\" />\n                </div>\n              ) : (\n                <div className=\"status\">\n                  Disconnected <Badge status=\"error\" />\n                </div>\n              )}\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Store\n                  {...this.state}\n                  updated={this.fetchUserBalance.bind(this)}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/stores\"\n              render={() => (\n                <Store\n                  {...this.state}\n                  updated={this.fetchUserBalance.bind(this)}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/stores/:storeID\"\n              render={({ match }) => (\n                <StoreItems\n                  {...this.state}\n                  updated={this.fetchUserBalance.bind(this)}\n                  storeID={match.params.storeID}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/orders\"\n              render={() => (\n                <Orders\n                  {...this.state}\n                  updated={this.fetchUserBalance.bind(this)}\n                />\n              )}\n            />\n          </Switch>\n        </Router>\n        <Footer style={{ textAlign: \"center\" }}>© DCart 2019</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}